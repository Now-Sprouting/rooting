[{"D:\\ReactProgram\\rooting\\src\\index.tsx":"1","D:\\ReactProgram\\rooting\\src\\App.tsx":"2","D:\\ReactProgram\\rooting\\src\\components\\Button\\button.tsx":"3","D:\\ReactProgram\\rooting\\src\\components\\Alert\\alert.tsx":"4","D:\\ReactProgram\\rooting\\src\\components\\Menu\\menuTtem.tsx":"5","D:\\ReactProgram\\rooting\\src\\components\\Menu\\menu.tsx":"6"},{"size":228,"mtime":1609818033402,"results":"7","hashOfConfig":"8"},{"size":2666,"mtime":1610068796262,"results":"9","hashOfConfig":"8"},{"size":1610,"mtime":1609896038489,"results":"10","hashOfConfig":"8"},{"size":1598,"mtime":1609899089299,"results":"11","hashOfConfig":"8"},{"size":1048,"mtime":1610066604173,"results":"12","hashOfConfig":"8"},{"size":2918,"mtime":1610067994657,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1w37bi4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactProgram\\rooting\\src\\index.tsx",[],["28","29"],"D:\\ReactProgram\\rooting\\src\\App.tsx",[],"D:\\ReactProgram\\rooting\\src\\components\\Button\\button.tsx",[],"D:\\ReactProgram\\rooting\\src\\components\\Alert\\alert.tsx",["30","31","32","33"],"import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\n// 枚举\r\nexport enum ButtonType {\r\n    Default = 'default',\r\n    Danger = 'danger',\r\n    Success = 'success',\r\n    Warning = 'warning'\r\n}\r\n// 接口(定义传入的属性时事先声明)\r\ninterface BaseAlertProps {\r\n    title: string;\r\n    description?: string;\r\n    type?: ButtonType;\r\n    closable?: boolean;\r\n    onClose?:  Function;\r\n}\r\nconst Alert: React.FC<BaseAlertProps> = (props) => {\r\n    const {\r\n        title,\r\n        description,\r\n        type,\r\n        closable,\r\n        onClose\r\n    } = props\r\n    // const classes = classNames('btn', className , {\r\n    //     [`btn-${btnType}`]: btnType,\r\n    //     [`btn-${size}`]: size,\r\n    //     'disabled': (btnType === ButtonType.Link) && disabled\r\n    // })\r\n    // if (btnType === ButtonType.Link && href) {\r\n    //     return (\r\n    //         <a href={href} className={classes} {...restProps}>{children}</a>\r\n    //     )\r\n    // } else {\r\n    //     return (\r\n    //         <button className={classes} disabled={disabled} {...restProps}>{children}</button>\r\n    //     )\r\n    // }\r\n    const mainClass = classNames('alertMain')\r\n    return (\r\n        <div className={mainClass}>\r\n            <div className='alertTop'>\r\n                <div className=\"alertTitle\">\r\n                    {title}\r\n                </div>\r\n                <div className=\"close\"></div>\r\n            </div>\r\n            <div className=\"alertBottom\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAlert.defaultProps = {\r\n    type: ButtonType.Default,\r\n    closable: true\r\n}\r\n\r\nexport default Alert","D:\\ReactProgram\\rooting\\src\\components\\Menu\\menuTtem.tsx",[],"D:\\ReactProgram\\rooting\\src\\components\\Menu\\menu.tsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":22,"column":9,"nodeType":"40","messageId":"41","endLine":22,"endColumn":20},{"ruleId":"38","severity":1,"message":"42","line":23,"column":9,"nodeType":"40","messageId":"41","endLine":23,"endColumn":13},{"ruleId":"38","severity":1,"message":"43","line":24,"column":9,"nodeType":"40","messageId":"41","endLine":24,"endColumn":17},{"ruleId":"38","severity":1,"message":"44","line":25,"column":9,"nodeType":"40","messageId":"41","endLine":25,"endColumn":16},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"@typescript-eslint/no-unused-vars","'description' is assigned a value but never used.","Identifier","unusedVar","'type' is assigned a value but never used.","'closable' is assigned a value but never used.","'onClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]